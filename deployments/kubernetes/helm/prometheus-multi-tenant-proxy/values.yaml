# Default values for prometheus-multi-tenant-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/k8spin/prometheus-multi-tenant-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: prometheus-test.dyn.cloud.e-infra.cz
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: 
   - secretName: prometheus-test-dyn-cloud-e-infra-cz
     hosts:
       - prometheus-test.dyn.cloud.e-infra.cz

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Prometheus multi-tenant proxy configuration
proxy:
  port: 9092
  # Prometheus endpoint
  #prometheusEndpoint: ""
  prometheusEndpoint: "http://prometheus-operated.cattle-monitoring-system.svc.cluster.local:9090"

  extraArgs: []
  # extraArgs:
  # - --aws
  extraEnv: []
  # extraEnv:
  # - name: AWS_ACCESS_KEY_ID
  #   valueFrom:
  #     secretKeyRef:
  #       name: aws-credentials
  #       key: AWS_ACCESS_KEY_ID


  auth:
    type: basic # basic or jwt
    # Basic auth configuration
    jwt:
      url: "" # URL/Path to the JWT configuration
    basic:
      # Users configuration
      createSecret: true
      # If createSecret is true, you can specify the users here
      # Default values are: users: [] (empty list)
      authn: |
         users:
         - username: Happy
           password: Prometheus
           namespaces: 
             - test-ns
           labels: 
             exported_namespace: 
               - jupyterhub-nuva-prod-ns
